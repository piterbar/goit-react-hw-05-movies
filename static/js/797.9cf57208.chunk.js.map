{"version":3,"file":"static/js/797.9cf57208.chunk.js","mappings":"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","sources":["components/moviesList/movieItem/MovieItem.styled.js","components/moviesList/movieItem/MovieItem.jsx","components/moviesList/MovieList.styled.js","components/moviesList/MoviesList.jsx","pages/MoviesPage.jsx","service/apiService.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  margin: ${p => p.theme.space[0]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { MovieLink } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\nconst MovieItem = ({ id, title }) => {\n  return (\n    <>\n      <li>\n        <MovieLink to={`/movies/${id}`}>\n          <h3>{title}</h3>\n        </MovieLink>\n      </li>\n    </>\n  );\n};\nexport default MovieItem;\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[0]}px;\n`;\n","import MovieItem from 'components/moviesList/movieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from './MovieList.styled';\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => {\n        return <MovieItem key={id} title={original_title} id={id} />;\n      })}\n    </List>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { fetchMoviesBySearch } from 'service/apiService';\nimport { MoviesList } from 'components/moviesList/MoviesList';\n// import SearchBar from 'components/searchBox/SearchBox';\nimport styled from 'styled-components';\nexport default function MoviesPageRender() {\n  const [movies, setMovies] = useState([]);\n  const [searhParams, setSearchParams] = useSearchParams();\n  // const { movieId } = useParams();\n  const query = searhParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getFetchMovies = async searchQuery => {\n      try {\n        const data = await fetchMoviesBySearch(searchQuery);\n        if (!data.results.length) {\n          throw new Error('No results found');\n        }\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error('No results found', { duration: 3000 });\n      }\n    };\n    if (query === '') {\n      return;\n    }\n    getFetchMovies(query);\n  }, [query]);\n\n  return (\n    <>\n      <Formik\n        initialValues={{ query: '' }}\n        onSubmit={({ query }, { resetForm }) => {\n          setSearchParams({ query });\n          resetForm();\n        }}\n      >\n        <SearchForm>\n          <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n          <SearchBtn type=\"submit\">Search</SearchBtn>\n        </SearchForm>\n      </Formik>\n      {Object.keys(movies).length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n}\nconst SearchForm = styled(Form)`\n  margin-left: ${p => p.theme.space[3]}px;\n`;\nconst Input = styled(Field)`\n  margin-right: ${p => p.theme.space[3]}px;\n  width: ${p => p.theme.space[8]}px;\n  height: ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.accent};\n  }\n`;\n\nconst SearchBtn = styled.button`\n  height: ${p => p.theme.space[5]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover,\n  :focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.accent};\n    background-color: ${p => p.theme.colors.white};\n    font-weight: ${p => p.theme.fontWeights.bold};\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a2a4b646a8c4d49a4659792b894cffab';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMoovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesBySearch = async query => {\n  try {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCastById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviewById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// export async function fetchTrendingMoovies() {\n//   const url = `/trending/movie/week?api_key=${apiKey}`;\n//   const { data } = await axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesBySearch(searchMovie) {\n//   const url = `/search/movie?query=${searchMovie}&api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesById(movieId) {\n//   const url = `/movie/${movieId}?api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n"],"names":["MovieLink","styled","Link","_templateObject","_taggedTemplateLiteral","p","theme","space","colors","text","fontSizes","m","fontWeights","normal","accent","_ref","id","title","_jsx","_Fragment","children","to","concat","List","ul","MoviesList","movies","map","_ref2","original_title","MovieItem","MoviesPageRender","_searhParams$get","setMovies","useState","searhParams","setSearchParams","useSearchParams","query","get","useEffect","async","data","fetchMoviesBySearch","searchQuery","results","length","Error","error","console","log","toast","duration","getFetchMovies","_jsxs","Formik","initialValues","onSubmit","resetForm","SearchForm","Input","name","type","placeholder","SearchBtn","Object","keys","Form","Field","_templateObject2","radii","borders","button","_templateObject3","white","bold","axios","baseURL","params","api_key","fetchTrendingMoovies","message","fetchMoviesById","movieId","fetchCastById","fetchReviewById"],"sourceRoot":""}